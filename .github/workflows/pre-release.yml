name: Pre-release step

on:
  release:
    types: [published]

permissions:
  contents: write
  actions: write

jobs:
  update-after-publish-release:
    name: Update Changelog, Cargo version and freeze website docs version
    runs-on: ubuntu-latest
    env:
      TAG: ${{ github.event.release.tag_name }}
      REPO: ${{ github.repository }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Extract version (strip leading v)
        run: |
          VERSION="${TAG#v}"
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"

      - name: Setup Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Prepend release notes to CHANGELOG.md
        run: |
          DATE=$(date -d "${{ github.event.release.published_at }}" +'%Y-%m-%d')
          BODY="${{ github.event.release.body }}"

          # Demote all headings in the release body (## -> ###, ### -> ####, etc.)
          echo "$BODY" | sed -E '
            s/^###### /####### /g;
            s/^##### /###### /g;
            s/^#### /##### /g;
            s/^### /#### /g;
            s/^## /### /g;
            s/^# /## /g
          ' >release.md

          # Fix line endings to LF
          sed -i 's/\r$//' release.md

          # Convert @username to GitHub links
          sed -i -E "s|@([a-zA-Z0-9_-]+)|[@\1](https://github.com/\1)|g" release.md

          # Convert #123 to issue links
          sed -i -E "s|#([0-9]+)|[#\1](https://github.com/${REPO}/issues/\1)|g" release.md

          {
            head -n 1 CHANGELOG.md 
            echo "" 
            echo "## [${VERSION}] - ${DATE}"
            echo ""
            cat release.md
            tail -n +3 CHANGELOG.md # rest of CHANGELOG.md
          } >tmp.md

          mv tmp.md CHANGELOG.md

      - name: Git add updated changelog
        run: |
          git add CHANGELOG.md

      - name: Update Cargo version
        run: |
          # Install cargo-edit for `cargo set-version`
          cargo install cargo-edit -f --no-default-features --features "set-version"

          # Update the root package version
          cargo set-version "${VERSION}"

      - name: Git add updated cargo toml
        run: |
          git add Cargo.toml Cargo.lock

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - uses: actions/setup-node@v5
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: ./website/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm i
        working-directory: ./website

      - name: Freeze website docs version
        run: |
          pnpm run docusaurus docs:version ${VERSION}
        working-directory: ./website

      - name: Git add updated website
        run: |
          git add website/

      - name: Git push changes
        run: |
          git commit -m "update changelog and freeze website docs version for ${TAG}" || echo "No changes to commit"
          git push

      - name: Update release tag to latest commit
        run: |
          git tag -f "${TAG}"
          git push -f origin "${TAG}"

      - name: Update release to point to new commit
        run: |
          SHA=$(git rev-parse HEAD)

          gh release edit $TAG --target $SHA

  run-cargo-dist:
    needs:
      - update-after-publish-release
    runs-on: ubuntu-latest
    env:
      TAG: ${{ github.event.release.tag_name }}
      REPO: ${{ github.repository }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Trigger Release workflow
        run: |
          echo "Triggering Release workflow for tag ${TAG}..."

          gh workflow run release.yml -f tag=$TAG
